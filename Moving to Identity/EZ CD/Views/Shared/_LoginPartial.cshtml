@using Microsoft.AspNetCore.Identity
@using EZ_CD.Areas.Identity.Data
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @{
                User user = await UserManager.GetUserAsync(User);
             }
            <a id="manage" class="nav-link" title="Manage">Hello @user.FirstName @user.LastName!</a>
        </li>
        <li class="nav-item active">
            <a class="nav-link" asp-controller="Home" asp-action="Index">Home<span class="sr-only">(current)</span></a>
        </li>
        @if (await UserManager.IsInRoleAsync(user, "Admins")) {
            <li class="nav-item">
                <a class="nav-link" asp-controller="AdminDashboard" asp-action="Index">Admin Dashboard</a>
            </li>
        }
        
        <li class="nav-item">
            <a class="nav-link" asp-controller="Home" asp-action="Cart">Cart (@HttpContextAccessor.HttpContext.Session.GetInt32("cartSize"))</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item active">
            <a class="nav-link" asp-controller="Home" asp-action="Index">Home<span class="sr-only">(current)</span></a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
